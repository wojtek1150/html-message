{"version":3,"file":"html-message.js","sources":["ng://html-message/lib/components/html-message.component.ts","ng://html-message/lib/components/html-preview-message.component.ts","ng://html-message/lib/html-parser.service.ts","ng://html-message/lib/pipes/html-parser.pipe.ts","ng://html-message/lib/pipes/html-preview.pipe.ts","ng://html-message/lib/pipes/save-html.pipe.ts","ng://html-message/lib/html-message.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'lib-html-message',\n  template: `\n    <div class=\"message\" [innerHtml]=\"message | htmlParser | safeHtml\"></div>\n  `,\n  styleUrls: ['./html-message.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class HtmlMessageComponent {\n  @Input() message: string;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-html-message-preview',\n  template: `\n    <p>{{message | htmlPreview:length}}</p>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HtmlPreviewMessageComponent {\n  @Input() message: string;\n  @Input() length = 100;\n}\n","// OLD FOR TEXT MAILS TO HMTL MAILS\nconst REG_CID1 = new RegExp('(\\[cid:[^\\s]+])<([^>]+)><([^>]+)>', 'gmi');\nconst REG_CID2 = new RegExp('(\\\\[cid:[^\\\\s]+])\\\\s+<([^>]+)><([^>]+)>', 'gmi');\nconst REG_LINKS = new RegExp('([^\\\\s<]+)<([^>]+)>', 'gmi');\nconst REG_TRIM_START = new RegExp('^(\\\\s)*');\nconst REG_TRIM_END = new RegExp('(\\\\s)*$');\nconst REG_WHITE_SPACE = new RegExp('\\\\n', 'g');\n// END\nexport const REG_IMAGES = new RegExp('(<img.*\">)', 'gmi');\nexport const REG_OUTLOCK = new RegExp('(_{32}.From.*)', 'gmi');\n\n\nexport class HtmlParserService {\n\n  private static removeCid(s: string): string {\n    return s.replace(REG_CID1, '').replace(REG_CID2, '');\n  }\n\n  private static parseLinks(s: string): string {\n    const replacer = (match, text, url) => match ? `<a href=\"${url}\" target=\"_blank\" rel=\"nofollow\">${text}</a>` : '';\n    return s.replace(REG_LINKS, replacer);\n  }\n\n  private static trim(s: string): string {\n    return s.replace(REG_TRIM_START, '').replace(REG_TRIM_END, '');\n  }\n\n  private static parseHtml(s: string): string {\n    return s\n      .replace('<html><body>', '').replace('</body></html>', '') // Replace wrap\n      .replace('style=\\\"text-align:right;\\\"', 'class=\\\"align-right\\\"') // Replace Align Right\n      .replace('style=\\\"text-align:center;\\\"', 'class=\\\"align-center\\\"') // Replace Align Center\n      .replace(REG_IMAGES, '') // Remove IMGS\n      .replace(REG_OUTLOCK, ''); // Remove Outlock Footer\n  }\n\n  static parse(s: string): string {\n    if (!s) { return ''; }\n    if (s.includes('[cid:')) { // FALLBACK FOR TEXT ONLY MESSAGES\n      return this.trim(this.parseLinks(this.removeCid(s))).replace(REG_WHITE_SPACE, '<br/>');\n    }\n    return this.parseHtml(s);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HtmlParserService } from '../html-parser.service';\n\n@Pipe({\n  name: 'htmlParser'\n})\nexport class HtmlParserPipe implements PipeTransform {\n\n  transform(value: string): string {\n    return HtmlParserService.parse(value);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { REG_OUTLOCK } from '../html-parser.service';\n\n@Pipe({\n  name: 'htmlPreview'\n})\nexport class HtmlPreviewPipe implements PipeTransform {\n\n  transform(value: string, length: number): string {\n    return value\n      .replace(REG_OUTLOCK, '')\n      .replace(/<[^>]*>?/gm, '')\n      .replace('&nbsp;', ' ')\n      .substr(0, length === -1 ? Infinity : length);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitized: DomSanitizer) {}\n\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HtmlMessageComponent } from './components/html-message.component';\nimport { HtmlPreviewMessageComponent } from './components/html-preview-message.component';\n\nimport { HtmlParserPipe } from './pipes/html-parser.pipe';\nimport { HtmlPreviewPipe } from './pipes/html-preview.pipe';\nimport { SafeHtmlPipe } from './pipes/save-html.pipe';\n\n@NgModule({\n  declarations: [\n    HtmlMessageComponent,\n    HtmlPreviewMessageComponent,\n    HtmlParserPipe,\n    HtmlPreviewPipe,\n    SafeHtmlPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [HtmlMessageComponent, HtmlPreviewMessageComponent]\n})\nexport class HtmlMessageModule {}\n"],"names":[],"mappings":"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"}